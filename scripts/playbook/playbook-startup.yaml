# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Cold Startup
  hosts: elect_servers
  become: yes
  become_user: elect
  tasks:
    - name: Cold Startup
      command: bash /home/elect/ELECTExp/scripts/Run/cold-startup.sh {{ maxLevel }} {{ initialDelay }} {{ concurrentEC }} {{ target_saving }} {{ data_block_num }} {{ parity_block_num }} {{ sourceFileDir }} {{ grade }}
      vars:
        maxLevel: 9
        initialDelay:  65536
        concurrentEC: 64
        target_saving: 0.6
        data_block_num: 4
        parity_block_num: 2
        sourceFileDir: "/mnt/ssd/backups/Scheme/DATAPATH/data"
        grade: "0"
      register: command_result
      ignore_errors: true
    - name: Fail the play if the previous command did not succeed
      fail: msg="the command failed"
      when: "'FAILED' in command_result.stderr"
    - name: Wait until cold startup is done
      pause:
        seconds: 90

- name: Setup log levels
  hosts: elect_servers
  become: yes
  become_user: elect
  tasks:
    - name: Setup log levels
      shell: |
        . /etc/profile && cd /mnt/ssd/CassandraEC && bin/nodetool setlogginglevel org.apache.cassandra error && bin/nodetool setlogginglevel ROOT error
      register: command_result
      ignore_errors: true


- name: Cold Startup reload
  hosts: elect_servers
  become: yes
  become_user: elect
  tasks:
    - name: Cold Startup
      command: bash /home/elect/ELECTExp/scripts/Run/cold-startup-reload.sh {{ mode }}
      vars:
        mode: "raw"
      register: command_result
      ignore_errors: true
    - name: Fail the play if the previous command did not succeed
      fail: msg="the command failed"
      when: "'FAILED' in command_result.stderr"
    - name: Wait until cold startup is done
      pause:
        seconds: 5