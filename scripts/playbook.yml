# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Rebuild and start Cassandra servers
  hosts: cassandra_servers
  become: true
  become_user: yjren
  tasks:
  - name: Execute script start-server.sh
    command: bash /mnt/ssd/Debug/CassandraEC/scripts/start-server.sh 4 2 6 32 5 5 3 # <ec_data_nodes>, <parity_nodes>, <max_level_count>, <concurrent_ec>, <initial_delay>, <task_delay>, <update_frequency>
    register: command_result
    ignore_errors: True

  - name: Fail the play if the previous command did not succeed
    fail: msg="the command failed"
    when: "'FAILED' in command_result.stderr"

  - name: Wait until all nodes are ready
    pause:
      seconds: 30

- name: Prepare keyspace and tables for evaluation
  hosts: cassandra_client

  tasks:
  - name: Execute script start-client.sh
    command: sh /mnt/ssd/Debug/CassandraEC/scripts/start-client.sh {{ ansible_hostname }} 8 4 # <coordinator address>, <sstable size in MB>, <fanout size>
    register: command_result
    ignore_errors: True

  - name: Fail the play if the previous command did not succeed
    fail: msg="the command failed"
    when: "'FAILED' in command_result.stderr"


- name: Start a evaluation
  hosts: cassandra_client

  tasks:
  - name: Execute script start-evaluation.sh
    command: sh /mnt/ssd/Debug/CassandraEC/scripts/start-evaluation.sh {{ ansible_hostname }} 60000000 1024 1 # <coordinator address>, <record count>, <field length>, <threads>
    register: command_result
    ignore_errors: True

  - name: Fail the play if the previous command did not succeed
    fail: msg="the command failed"
    when: "'FAILED' in command_result.stderr"