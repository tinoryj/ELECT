#!/bin/bash
. /etc/profile

nodes10="172.27.96.1,172.27.96.2,172.27.96.3,172.27.96.4,172.27.96.5,172.27.96.6,172.27.96.7,172.27.96.8,172.27.96.9,172.27.96.10"
nodes20="172.27.96.1,172.27.96.2,172.27.96.3,172.27.96.4,172.27.96.5,172.27.96.6,172.27.96.7,172.27.96.8,172.27.96.9,172.27.96.10,172.27.96.11,172.27.96.12,172.27.96.13,172.27.96.14,172.27.96.15,172.27.96.16,172.27.96.17,172.27.96.18,172.27.96.19,172.27.96.20"
nodes30="172.27.96.1,172.27.96.2,172.27.96.3,172.27.96.4,172.27.96.5,172.27.96.6,172.27.96.7,172.27.96.8,172.27.96.9,172.27.96.10,172.27.96.11,172.27.96.12,172.27.96.13,172.27.96.14,172.27.96.15,172.27.96.16,172.27.96.17,172.27.96.18,172.27.96.19,172.27.96.20,172.27.96.21,172.27.96.22,172.27.96.23,172.27.96.24,172.27.96.25,172.27.96.26,172.27.96.27,172.27.96.28,172.27.96.29,172.27.96.30"
nodes40="172.27.96.1,172.27.96.2,172.27.96.3,172.27.96.4,172.27.96.5,172.27.96.6,172.27.96.7,172.27.96.8,172.27.96.9,172.27.96.10,172.27.96.11,172.27.96.12,172.27.96.13,172.27.96.14,172.27.96.15,172.27.96.16,172.27.96.17,172.27.96.18,172.27.96.19,172.27.96.20,172.27.96.21,172.27.96.22,172.27.96.23,172.27.96.24,172.27.96.25,172.27.96.26,172.27.96.27,172.27.96.28,172.27.96.29,172.27.96.30,172.27.96.31,172.27.96.32,172.27.96.33,172.27.96.34,172.27.96.35,172.27.96.36,172.27.96.37,172.27.96.38,172.27.96.39,172.27.96.40"

NodesList=$nodes10
echo "${NodesList}"

func() {
    cd /mnt/ssd/CassandraEC
    mode=$1

    if [ $mode == "raw" ]; then
        echo "Recovery data for cassandra;"
        kill -9 $(ps aux | grep CassandraDaemon | grep -v grep | awk 'NR == 1' | awk {'print $2'})
        echo "Target recovery data size of cassandra:" >> logs/recovery.log
        du -s data/data/ycsbraw/ >> logs/recovery.log
        rm -rf data/data/ycsbraw/

        nohup bin/cassandra >logs/debug.log 2>&1 &

        sleep 60

        start_time=$(($(date +%s%N) / 1000000))
        bin/nodetool repair ycsbraw -j 16 >> logs/recovery.log
        end_time=$(($(date +%s%N) / 1000000))
        elapsed_time=$((end_time - start_time))
        echo "Repair Time Cost: $elapsed_time (ms)" >> logs/recovery.log
    else
        echo "Recovery data for elect/mslm;"
        bin/nodetool recovery ycsb usertable0
    fi
}

func "$1"
